paths:
  /api/products/:
    get:
      summary: Get all products
      tags:
        - Products
      responses:
        "200":
          description: All products retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Product"
        "400":
          description: Cast Error, one of the parameters is of the wrong type
        "500":
          description: Internal Server Error, something went wrong with database conection
    post:
      summary: Create one product
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/createProduct"
      responses:
        "200":
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Product"
        "400":
          description: Validation Error, one of the fields is of the wrong type or is missing
        "500":
          description: Internal Server Error, something went wrong with database conection
  /api/products/{pid}/:
    get:
      summary: Get one product
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: id of the product to retrieve
          schema:
            $type: string
      responses:
        "200":
          description: Product retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Product"
        "400":
          description: Cast Error, one of the parameters is of the wrong type
        "404":
          description: Not Found Error, the product was not found in the database
        "500":
          description: Internal Server Error, something went wrong with database conection
    put:
      summary: Update one product
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          description: id of the product to update
          schema:
            $type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#components/requestBodies/createProduct"
      responses:
        "200":
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: "#components/schemas/Product"
        "404":
          description: Not Found Error, the product was not found in the database
        "400":
          description: Validation Error, one of the fields is of the wrong type or is missing

components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Autogenerated mongodb ID
        owner:
          type: string
          description: email of the owner or admin
        title:
          type: string
          description: name of the product
        description:
          type: string
          description: description of the product
        price:
          type: number
          description: price of the product
        thumbnail:
          type: string
          description: path to the image of the product
        code:
          type: string
          description: unique code identifier for the product
        stock:
          type: number
          description: stock of the product
        status:
          type: boolean
          description: state of the product
        category:
          type: string
          description: category of the product
      example:
        owner: admin
        _id: 6483de46fc7349e7c00e5476
        title: Prueba
        description: Descripcion del producto
        price: 100
        thumbnail: "/path/to/image"
        code: abc2
        stock: 15
        status: false
        category: abc1
        __v: 0
  requestBodies:
    createProduct:
      type: object
      properties:
        title:
          type: string
          description: name of the product
        description:
          type: string
          description: description of the product
        price:
          type: number
          description: price of the product
        thumbnail:
          type: string
          description: path to the image of the product
        code:
          type: string
          description: unique code identifier for the product
        stock:
          type: number
          description: stock of the product
        status:
          type: boolean
          description: state of the product
        category:
          type: string
          description: category of the product
      example:
        title: Prueba premium 2
        description: Descripcion del producto premium 2
        price: 200
        thumbnail: "path/to/image"
        code: abc1001
        stock: 5
        status: true
        category: abc
